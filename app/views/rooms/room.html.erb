<div class="container">
    <% if @single_room %>
        <div class="d-flex justify-content-between">
            <%= link_to 'back', root_url %>

            <% flash.each do |type, msg| %>
                <div>
                    <%= msg %>
                </div>
            <% end %>

            <% if @single_room.user_id == @current_user.id %>
                <% if @single_room.is_active == false %>
                    <button id="category-modal-button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#category-modal" type="button">
                        Choose Category
                    </button>
                <% else %>
                    <h3>Timer <span id='time'>00:00</span></h3>
                    <%= form_with url: room_path(@single_room), method: "patch" do |f| %>
                        <%= f.hidden_field :room_id, :value => @single_room.id %>
                        <%= f.hidden_field :state, :value => false %>
                        <%= f.submit 'End Game', id: 'end-game-button' %>
                    <% end %>
                <% end %>
            <% end %>

        </div>

        <h1><%= @single_room.name %></h1>
        <div class="d-flex justify-content-between">
            <h3>Created by: <%= @single_room.user.username %></h3>
            
            <% if @is_groupcreator && @single_room.is_active? && !@only_one_groupparticipant && @is_comp %>
                <%= form_with url: gameturn_path, method: 'patch' do |f| %>
                    <%= f.hidden_field :room_id, :value => @single_room.id %>
                    <%= f.submit 'Next Player', id: 'next-player-button' %>
                <% end %>
            <% end %>
        </div>

        <hr>

        <% if @is_groupcreator && @single_room.is_active == false %>
            <%= form_with url: room_path(@single_room), method: 'delete' do |f| %>
                <%= f.hidden_field :id, :value => @single_room.id %>
                <%= f.submit 'delete group' %>
            <% end %>
        <% else %>
            <% unless @single_room.is_active %>
                <% if @is_groupparticipant %>
                    <%= render partial: 'layouts/leave_room_form' %>
                <% else %>
                    <%= render partial: 'layouts/join_room_form' %>
                <% end %>
            <% else %>
                <% if @is_comp %>
                    <h4>Current Player: <%= @current_player_username %></h4>
                <% end %>
                <h4>Category: <%= @single_room.category %></h4>
                <h4>Timer Interval: <span id="timer-interval"><%= @timer_interval%></span> seconds</h4>
            <% end %>
        <% end %>

        <br>

        <h3><u>Group Participants</u></h3>
        <% if @groupparticipants.exists? %>
            <ul>
                <% @groupparticipants.each do |groupparticipants| %>
                    <% if groupparticipants == current_user %>
                        <li><%= groupparticipants.username %>(You)</li>
                    <% else %>
                        <li><%= groupparticipants.username %></li>
                    <% end %>
                <% end %>
            </ul>
        <% else %>
            <h4>No Participants</h4>
        <% end%>
    
    <% end %>

    <hr>

    <%= turbo_stream_from @single_room %>
    <div id="messages">
        <%= render @messages %>
    </div>
    <% if @is_coop %>
        <div class="d-flex justify-content-center">
            <%= render partial: 'layouts/new_message_form' %>
        </div>
    <% elsif @is_comp %>
        <div class="d-flex justify-content-center <%= (current_user.id == @current_player_id) ? "" : "d-none" %>">
            <%= render partial: 'layouts/new_message_form' %>
        </div>
    <% else %>
    <% end %>

    <div id="category-modal" class="modal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <%= render 'category_modal' %>
            </div>
        </div>
    </div>

</div>

<script>
if (document.querySelector('#timer-interval') != null) {
    var timer_interval = parseInt(document.querySelector('#timer-interval').innerHTML);
    startTimer(timer_interval); // hardcoded for now, look into making this value dynamic -> also hardcoded in html page on initial load
};

if (document.querySelector('#next-player-button') != null) {
    var next_player_button = document.querySelector('#next-player-button');
    next_player_button.onclick = function() {
        clearInterval(interval_instance);
    };
};

// controls the in game timer
function timerMechanism(duration, display) {
    var timer = duration, minutes, seconds;
    interval_instance = setInterval(function () {
        minutes = parseInt(timer / 60, 10);
        seconds = parseInt(timer % 60, 10);

        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;

        display.textContent = minutes + ":" + seconds;

        if (--timer < 0) {
            if (document.querySelector('#end-game-button') != null) {
                var end_game_button = document.querySelector('#end-game-button');
                end_game_button.click();
            };
        };
    }, 1000);
}

function startTimer(time) {
    if (document.querySelector('#time') != null) {
        var display = document.querySelector('#time');
        timerMechanism(time, display);
    };
}
</script>
